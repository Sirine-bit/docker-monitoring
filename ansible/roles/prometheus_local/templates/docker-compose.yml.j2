
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-local-{{ inventory_hostname }}
    user: "root"
    ports:
      - "{{ prometheus_local_port }}:9090"
    volumes:
      - prometheus_local_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.listen-address=0.0.0.0:9090'
      - '--web.external-url=http://{{ ansible_host }}:{{ prometheus_local_port }}'
      - '--log.level=info'
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - node-exporter
      - cadvisor
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "monitored=true"
      - "service_type=monitoring"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter-{{ inventory_hostname }}
    ports:
      - "{{ monitoring.node_exporter.port }}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
      - '--web.listen-address=0.0.0.0:9100'
    pid: "host"
    restart: unless-stopped
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "monitored=true"
      - "service_type=system"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor-{{ inventory_hostname }}
    ports:
      - "{{ monitoring.cadvisor.port }}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
      - '--port=8080'
      - '--housekeeping_interval=30s'
      - '--max_housekeeping_interval=35s'
      - '--event_storage_event_limit=default=0'
      - '--event_storage_age_limit=default=0'
      - '--store_container_labels=false'
    privileged: true
    restart: unless-stopped
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "monitored=true"
      - "service_type=docker"

volumes:
  prometheus_local_data:
    driver: local

networks:
  monitoring:
    driver: bridge
    name: monitoring-{{ inventory_hostname }}