global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: '{{ deployment_env }}-{{ service_type }}'
    instance: '{{ inventory_hostname }}'
    region: 'local'
    environment: '{{ deployment_env }}'

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus-local'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          instance_type: 'prometheus'
          environment: '{{ deployment_env }}'

  # Node exporter local - utiliser le nom du service Docker
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          instance_type: '{{ service_type }}'
          environment: '{{ deployment_env }}'

  # cAdvisor pour les métriques Docker - utiliser le nom du service Docker
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          instance_type: 'docker-metrics'
          environment: '{{ deployment_env }}'

  # Auto-découverte des conteneurs Docker avec correction du port mapping
  - job_name: 'docker-containers'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
        filters:
          - name: label
            values: ["monitored=true"]
    
    relabel_configs:
      # Garder seulement les conteneurs avec label monitored=true
      - source_labels: [__meta_docker_container_label_monitored]
        regex: 'true'
        action: keep
      
      # Utiliser le nom du conteneur comme instance
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
      
      # Ajouter le type de service depuis le label
      - source_labels: [__meta_docker_container_label_service_type]
        target_label: service_type
      
      # Correction du port mapping - utiliser l'IP du conteneur + port privé
      - source_labels: [__meta_docker_network_ip, __meta_docker_port_private]
        regex: '([^:]+):(\d+)'
        target_label: __address__
        replacement: '${1}:${2}'
      
      # Si pas de port privé trouvé, utiliser le nom du service + port par défaut
      - source_labels: [__meta_docker_container_name]
        target_label: __address__
        regex: '(.*)'
        replacement: '${1}:9100'
        
      # Exclure les conteneurs prometheus, cadvisor et node-exporter déjà scrapés
      - source_labels: [__meta_docker_container_name]
        regex: '(prometheus-local-.*|cadvisor-.*|node-exporter-.*)'
        action: drop