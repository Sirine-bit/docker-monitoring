---
- name: Deploy local monitoring on target nodes
  hosts: all:!control
  gather_facts: yes
  vars_files:
    - ../vault/secrets.yml
    - ../group_vars/all.yml
  roles:
    - prometheus_local
  
  post_tasks:
    - name: Verify prometheus local is accessible
      uri:
        url: "http://{{ ansible_host }}:{{ prometheus_local_port }}/-/healthy"
        method: GET
      register: prometheus_targets
      retries: 5
      delay: 30
      ignore_errors: yes

    - name: Display local prometheus status
      debug:
        msg: "Prometheus local accessible at http://{{ ansible_host }}:{{ prometheus_local_port }}"
      when: prometheus_targets is succeeded

- name: Deploy federation monitoring on control node
  hosts: control
  gather_facts: yes
  vars_files:
    - ../vault/secrets.yml
    - ../group_vars/all.yml
  roles:
    - monitoring_stack
    - prometheus_federator
  
  post_tasks:
    - name: Collect remote prometheus instances info
      set_fact:
        remote_instances: "{{ remote_instances | default([]) + [{'host': item, 'ip': hostvars[item]['ansible_host'], 'port': hostvars[item]['prometheus_local_port'] | default(9090)}] }}"
      loop: "{{ groups['all'] }}"
      when: 
        - item != inventory_hostname 
        - hostvars[item]['prometheus_local'] is defined
        - hostvars[item]['prometheus_local'] | bool

    - name: Display remote prometheus instances
      debug:
        msg: "{{ item.host }}: http://{{ item.ip }}:{{ item.port }}"
      loop: "{{ remote_instances | default([]) }}"
      when: remote_instances is defined

    - name: Display federation summary
      debug:
        msg:
          - "=== Federation Setup Complete ==="
          - "Total federated instances: {{ (remote_instances | default([])) | length }}"
          - "Federation status: {{ 'SUCCESS' if federation_targets is succeeded else 'FAILED' }}"